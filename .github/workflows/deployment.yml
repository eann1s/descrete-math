on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        service: [backend, bot]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./${{ matrix.service }}
          push: true
          platforms: linux/amd64
          tags: |
            ghcr.io/${{ github.repository }}:${{ matrix.service }}-latest
            ghcr.io/${{ github.repository }}:${{ matrix.service }}-${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Pull Docker image
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}
            cd /home/${{ secrets.SERVER_USERNAME }}
            docker pull ghcr.io/${{ github.repository }}:${{ matrix.service }}-latest
  
  transfer-files:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create .env file
        run: |
          echo "${{ secrets.DOT_ENV }}" | base64 -d > .env
          echo "APP_DOCKER_IMAGE=ghcr.io/${{ github.repository }}:backend-latest" >> .env
          echo "BOT_DOCKER_IMAGE=ghcr.io/${{ github.repository }}:bot-latest" >> .env
          chmod 755 .env
      
      - name: Transfer .env file
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          source: ".env"
          target: "/home/${{ secrets.SERVER_USERNAME }}"
      
      - name: Transfer docker-compose.prod.yml file
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          source: "docker-compose.prod.yml"
          target: "/home/${{ secrets.SERVER_USERNAME }}"

  deploy:
    needs: [build, transfer-files]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Run docker-compose.prod.yml file
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cd /home/${{ secrets.SERVER_USERNAME }}
            docker compose -f docker-compose.prod.yml up -d
